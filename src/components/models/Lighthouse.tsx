/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 lighthouse.glb --types --shadows --transform --keepmaterials 
Files: lighthouse.glb [196.79KB] > /home/alexkahn/alex/portfolio/src/assets/glb/lighthouse-transformed.glb [23.39KB] (88%)
*/
import { Mesh, MeshStandardMaterial } from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated } from "@react-spring/three";
import { HomeModelProps } from "../../pages/HomePage";

type GLTFResult = GLTF & {
  nodes: {
    Lighthouse1: Mesh;
  };
  materials: {
    lambert2SG: MeshStandardMaterial;
  };

  // @ts-expect-error: gltfjsx 6.4.1 has error in types
  animations: GLTFAction[];
};

export const LighthouseModel = ({
  position,
  rotation,
  scale,
  onPointerEnter,
  onPointerLeave,
  onClick,
}: HomeModelProps) => {
  const { nodes, materials } = useGLTF(
    "/lighthouse-transformed.glb",
  ) as GLTFResult;
  return (
    <animated.group
      position={position}
      rotation={rotation}
      scale={scale}
      dispose={null}
      onPointerEnter={onPointerEnter}
      onPointerLeave={onPointerLeave}
      onClick={onClick}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Lighthouse1.geometry}
        material={materials.lambert2SG}
      />
    </animated.group>
  );
};

useGLTF.preload("/lighthouse-transformed.glb");
