/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 dock.glb --types --shadows --transform --keepmaterials 
Files: dock.glb [472.54KB] > /home/alexkahn/alex/portfolio/src/assets/glb/dock-transformed.glb [40.61KB] (91%)
*/

import { Mesh, MeshStandardMaterial, Vector3 } from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { animated, useSpring } from "@react-spring/three";
import { HomeModelProps } from "../../pages/HomePage";

type GLTFResult = GLTF & {
  nodes: {
    Port_SecondAge_Level2_1: Mesh;
    Port_SecondAge_Level2_2: Mesh;
    Port_SecondAge_Level2_3: Mesh;
    Port_SecondAge_Level2_4: Mesh;
    Port_SecondAge_Level2_5: Mesh;
    Port_SecondAge_Level2_6: Mesh;
    Port_SecondAge_Level2_7: Mesh;
    Port_SecondAge_Level2_8: Mesh;
    Port_SecondAge_Level2_9: Mesh;
  };
  materials: {
    Wood_Light: MeshStandardMaterial;
    Wood: MeshStandardMaterial;
    Main: MeshStandardMaterial;
    Metal_Light: MeshStandardMaterial;
    White: MeshStandardMaterial;
    Fabric: MeshStandardMaterial;
    Walls: MeshStandardMaterial;
    Stone: MeshStandardMaterial;
    Stone_Light: MeshStandardMaterial;
  };

  // @ts-expect-error: gltfjsx 6.4.1 has error in types
  animations: GLTFAction[];
};

export const DockModel = ({
  position,
  rotation,
  scale,
  onPointerEnter,
  onPointerLeave,
  onClick,
}: HomeModelProps) => {
  const { nodes, materials } = useGLTF("/dock-transformed.glb") as GLTFResult;
  return (
    <animated.group
      position={position}
      rotation={rotation}
      scale={scale}
      dispose={null}
      onPointerEnter={onPointerEnter}
      onPointerLeave={onPointerLeave}
      onClick={onClick}
    >
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_1.geometry}
          material={materials.Wood_Light}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_2.geometry}
          material={materials.Wood}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_3.geometry}
          material={materials.Main}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_4.geometry}
          material={materials.Metal_Light}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_5.geometry}
          material={materials.White}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_6.geometry}
          material={materials.Fabric}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_7.geometry}
          material={materials.Walls}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_8.geometry}
          material={materials.Stone}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Port_SecondAge_Level2_9.geometry}
          material={materials.Stone_Light}
        />
      </group>
    </animated.group>
  );
};

useGLTF.preload("/dock-transformed.glb");
